/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cuckoo;
import cuckoo.HashUtility;
import cuckoo.Bucket;
import cuckoo.CuckooFilter;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }
    static String getAlphaNumericString(int n)
    {

        // chose a Character random from this String
        String AlphaNumericString = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                                    + "0123456789"
                                    + "abcdefghijklmnopqrstuvxyz";

        // create StringBuffer size of AlphaNumericString
        StringBuilder sb = new StringBuilder(n);

        for (int i = 0; i < n; i++) {

            // generate a random number between
            // 0 to AlphaNumericString variable length
            int index
                = (int)(AlphaNumericString.length()
                        * Math.random());

            // add Character one by one in end of sb
            sb.append(AlphaNumericString
                          .charAt(index));
        }

        return sb.toString();
    }
    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        //System.out.println(HashUtility.fingerprint("abcdefghijyz",2));
        Bucket mBucket = new Bucket(5);
        for(int i=0;i<=6;i++){
          mBucket.insert(i);
        }

        for (int i = 0; i<=100 ;i++){
          //System.out.println(mBucket.swap(i%6));
        }
        int capacity = 10;
        int fist = capacity*2 ;
        String[] collection = new String[fist];
        CuckooFilter mCuckooFilter = new CuckooFilter(16, 4, 3,500);
        for (int i = 0; i<(fist);i++){
          String randomString = App.getAlphaNumericString(6);
          if (mCuckooFilter.insert(randomString)){
            collection[i] = randomString;
          } else{
            collection[i]= null;
          }
        }
        /*for (int i = 0; i<=(capacity+60);i++){
          System.out.print(i);
          System.out.print("  ::  ");
          System.out.print(mCuckooFilter.insert(App.getAlphaNumericString(6)));
          System.out.println();
        }
*/
        mCuckooFilter.printBuckets();
        for(String loc:collection){
          if(loc==null){
            continue;
          }else{
            System.out.print(loc);
            System.out.print("  ::  ");
            System.out.println(mCuckooFilter.contains(loc));
          }
        }
        for(String loc:collection){
          if(loc==null){
            continue;
          }else{
            System.out.print("Deleted  ::  ");
            System.out.print(loc);
            System.out.print("  ::  ");
            System.out.println(mCuckooFilter.delete(loc));
          }
        }
        for(String loc:collection){
          if(loc==null){
            continue;
          }else{
            System.out.print("  ::  ");
            System.out.print(loc);
            System.out.print("  ::  ");
            System.out.println(mCuckooFilter.contains(loc));
          }
        }
        mCuckooFilter.insert("sdvbrebrehgr");
        System.out.println(mCuckooFilter.contains("sdvbrebrehgr"));
        mCuckooFilter.delete("sdvbrebrehgr");
        System.out.println(mCuckooFilter.contains("sdvbrebrehgr"));


    }
}
